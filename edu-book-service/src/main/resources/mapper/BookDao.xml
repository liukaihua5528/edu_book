<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.book.infrastructure.repositoryImpl.dao.book.BookDao">

    <sql id="pageQueryFileds">
        book.c_title as title,
        book.c_sub_title as subtitle,
        book.c_pic_url as pic,
        book.c_author as author,
        book.c_summary as summary,
        book.c_publisher as publisher,
        book.c_public_place as pubplace,
        book.c_public_date as pubdate,
        book.c_page as page,
        book.c_price as price,
        book.c_binding as binding,
        book.c_isbn10_code as isbn10,
        book.c_keyword as keyword,
        book.c_cip as cip,
        book.c_edition as edition,
        book.c_impression as impression,
        book.c_language as `language`,
        book.c_format as format,
        book.c_book_class as `class`,
        book.c_isbn_code as isbn,
        detail.c_book_uid as bookUid,
        detail.c_garden as garden,
        detail.c_status as bookStatus
    </sql>

    <!--fun getPageTotal(dto: PageQueryBookDto): Int-->
    <select id="getPageTotal" parameterType="com.edu.book.domain.book.dto.PageQueryBookDto" resultType="int">
        SELECT
            COUNT(1)
        FROM
            t_book_detail detail
        LEFT JOIN t_book book ON book.c_isbn_code = detail.c_isbn_code AND book.c_is_deleted = 0
        <if test="classifyList != null and classifyList.size > 0">
            LEFT JOIN t_book_detail_classify classify ON classify.c_book_uid = detail.c_book_uid AND classify.c_is_deleted = 0
        </if>
        <if test="ageGroups != null and ageGroups.size > 0">
            LEFT JOIN t_book_detail_age age ON age.c_book_uid = detail.c_book_uid AND age.c_is_deleted = 0
        </if>
        WHERE detail.c_is_deleted = 0
        <include refid="pageQueryCondition"></include>
    </select>

    <!--fun getPage(dto: PageQueryBookDto): List<PageQueryBookResultDto>-->
    <select id="getPage" parameterType="com.edu.book.domain.book.dto.PageQueryBookDto"
        resultType="com.edu.book.domain.book.dto.PageQueryBookResultEntity">
        SELECT
        <include refid="pageQueryFileds"/>
        FROM
        t_book_detail detail
        LEFT JOIN t_book book ON book.c_isbn_code = detail.c_isbn_code AND book.c_is_deleted = 0
        <if test="classifyList != null and classifyList.size > 0">
            LEFT JOIN t_book_detail_classify classify ON classify.c_book_uid = detail.c_book_uid AND classify.c_is_deleted = 0
        </if>
        <if test="ageGroups != null and ageGroups.size > 0">
            LEFT JOIN t_book_detail_age age ON age.c_book_uid = detail.c_book_uid AND age.c_is_deleted = 0
        </if>
        WHERE detail.c_is_deleted = 0
        <include refid="pageQueryCondition"></include>
        <bind name="key_offset" value="(page-1) * pageSize"/>
        <if test="page != null and page >= 0 and pageSize != null and pageSize >= 0">
            LIMIT #{key_offset},#{pageSize}
        </if>
    </select>

    <sql id="pageQueryCondition">
        <if test="title != null and title != ''">
            AND book.c_title = #{title}
        </if>
        <if test="subTitle != null and subTitle != ''">
            AND book.c_sub_title = #{subTitle}
        </if>
        <if test="isbn != null and isbn != ''">
            AND book.c_isbn_code = #{isbn}
        </if>
        <if test="bookUid != null and bookUid != ''">
            AND detail.c_book_uid = #{bookUid}
        </if>
        <if test="classifyList != null and classifyList.size > 0">
            AND classify.c_classify in
            <foreach collection="classifyList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="ageGroups != null and ageGroups.size > 0">
            AND age.c_age_group in
            <foreach collection="ageGroups" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </sql>

</mapper>
